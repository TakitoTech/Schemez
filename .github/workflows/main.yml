name: build, lint, test, and publish
on: [push]
jobs:
  build:
    name: Build, lint, and test on Node ${{ matrix.node }} and ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node: ['14']
        # node: ['10.x', '12.x', '14.x']
        os: [ubuntu-latest]
        # os: [ubuntu-latest, windows-latest, macOS-latest]
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Use Node ${{ matrix.node }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
      # - name: Install deps and build (with cache) # replaced with below script
        # uses: TakitoTech/action-pnpm-install@main
      - name: Install pnpm
        uses: pnpm/action-setup@v2.2.2
        # with:
        #   version: 7.1.0 # uses version set in package.json > packageManager
      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "::set-output name=pnpm_cache_dir::$(pnpm store path)"
        shell: bash
      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - name: Install Dependencies
        run: pnpm install --frozen-lockfile # verifies lockfile matches package.json
        shell: bash
      - name: Lint
        run: pnpm lint
      - name: Test
        run: pnpm test -- --ci --coverage --maxWorkers=2
        env:
          CI: true
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos
          file: ./coverage/clover.xml # optional
      - name: Build
        run: pnpm build
  publish-pnpm:
    needs: build
    strategy:
      matrix:
        node: ['14']
        # node: ['10.x', '12.x', '14.x']
        os: [ubuntu-latest]
        # os: [ubuntu-latest, windows-latest, macOS-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Use Node ${{ matrix.node }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          # registry-url: https://registry.npmjs.org/
      - name: Install Dependencies
        run: pnpm install --frozen-lockfile # verifies lockfile matches package.json
        shell: bash
      - name: Build
        run: pnpm build
      # https://github.com/cycjimmy/semantic-release-action
      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v3
        id: semantic
        with:
          # Recommended to specify specifying version range to reduce version errors
          # https://www.npmjs.com/package/semantic-release
          semantic_version: 19.0.3
          branch: main
          # https://www.npmjs.com/package/@semantic-release/git
          # https://www.npmjs.com/package/@semantic-release/changelog
          extra_plugins: |
            @semantic-release/git@10.0.1
            @semantic-release/changelog@6.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # no need to set since its provided by github automatically
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Push updates to branch for major version
        # if there is a new version published, let's say v1.2.3
        # then this step will update branch "v1" to this commit
        # https://github.com/cypress-io/github-action/branches
        if: steps.semantic.outputs.new_release_published == 'true'
        run: 'git push https://x-access-token:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git HEAD:refs/heads/v${{steps.semantic.outputs.new_release_major_version}}'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
